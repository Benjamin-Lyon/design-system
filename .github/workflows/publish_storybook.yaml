name: Publish storybook
on:
  workflow_dispatch:
    inputs:
      storybook-slot:
        description: 'Azure webapp slot for Storybook (development | production | lab)'
        required: false
        default: 'development'
  push:
    branches:
      - develop
    paths:
      - 'packages/eds-core-react/**'
      - 'packages/eds-lab-react/**'
      - 'packages/eds-tokens/**'
      - 'packages/eds-icons/**'
jobs:
  setup:
    uses: equinor/design-system/.github/workflows/_setup.yml@develop
    with:
      cacheKey: ${{ github.sha }}
      checkout_paths: packages/eds-core-react packages/eds-tokens packages/eds-icons packages/eds-lab-react packages/eds-utils
      stage: ${{ github.event.inputs.storybook-slot }}
  packages:
    name: Process packages
    runs-on: ubuntu-latest
    needs: [setup]
    env:
      STAGE: ${{ needs.setup.outputs.stage }}
    steps:
      - name: Use "setup" cache
        uses: actions/cache@v3
        with:
          path: |
            ./*
            ~/.pnpm-store
          key: ${{ github.sha }}
      - name: Use "dist" cache
        uses: actions/cache@v3
        with:
          path: |
            ./*
            ~/.pnpm-store
          key: ${{ github.sha }}-dist-${{ needs.setup.outputs.stage }}
      - name: Build packages
        run: node_modules/.bin/pnpm run build
      - name: Build lab storybook
        if: ${{ env.STAGE == 'lab' }}
        run: node_modules/.bin/pnpm build:storybook:lab
      - name: Build core-react storybook
        if: ${{ env.STAGE != 'lab' }}
        run: node_modules/.bin/pnpm build:storybook

  publish-storybook:
    needs: [setup, packages]
    uses: equinor/design-system/.github/workflows/_azure_docker.yml@develop
    with:
      stage: ${{ needs.setup.outputs.stage }}
      cacheKey: ${{ github.sha }}-dist-${{ needs.setup.outputs.stage }}
      dockerfilePath: ${{ (needs.setup.outputs.stage == 'development' || needs.setup.outputs.stage == 'production') && './packages/eds-core-react/Dockerfile.storybook' || './packages/eds-lab-react/Dockerfile.storybook' }}
    secrets:
      REGISTRY_LOGIN_SERVER: ${{ secrets.REGISTRY_LOGIN_SERVER }}
      REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
      REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
  # build-storybook-core-react:
  #   name: Build Storybook core
  #   runs-on: ubuntu-latest
  #   needs: setup
  #   if: ${{ github.event.inputs.storybook-slot != 'lab' }}
  #   steps:
  #     - name: Get base files
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           ./*
  #           ~/.pnpm-store
  #         key: ${{ github.sha }}
  #     - name: Build tokens
  #       run: node_modules/.bin/pnpm --filter @equinor/eds-tokens run build
  #     - name: Build utils
  #       run: node_modules/.bin/pnpm --filter @equinor/eds-utils run build
  #     - name: Build icons
  #       run: node_modules/.bin/pnpm --filter @equinor/eds-icons run build
  #     - name: Build storybook
  #       run: node_modules/.bin/pnpm --filter @equinor/eds-core-react run build:storybook
  #     - uses: actions/cache@v2
  #       name: Save build to cache
  #       with:
  #         path: |
  #           ./*
  #           ~/.pnpm-store
  #         key: ${{ github.sha }}-build-storybook
  # build-storybook-lab:
  #   name: Build Storybook lab
  #   runs-on: ubuntu-latest
  #   needs: setup
  #   if: ${{ github.event.inputs.storybook-slot == 'lab' }}
  #   steps:
  #     - name: Get base files
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           ./*
  #           ~/.pnpm-store
  #         key: ${{ github.sha }}
  #     - name: Build tokens
  #       run: node_modules/.bin/pnpm --filter @equinor/eds-tokens run build
  #     - name: Build utils
  #       run: node_modules/.bin/pnpm --filter @equinor/eds-utils run build
  #     - name: Build icons
  #       run: node_modules/.bin/pnpm --filter @equinor/eds-icons run build
  #     - name: Build core-react
  #       run: node_modules/.bin/pnpm --filter @equinor/eds-core-react run build
  #     - name: Build storybook
  #       run: node_modules/.bin/pnpm --filter @equinor/eds-lab-react run build:storybook
  #     - uses: actions/cache@v2
  #       name: Save build to cache
  #       with:
  #         path: |
  #           ./*
  #           ~/.pnpm-store
  #         key: ${{ github.sha }}-build-storybook
  # build_push_docker_core:
  #   name: Build & Deploy Docker core
  #   runs-on: ubuntu-latest
  #   needs: [build-storybook-core-react]
  #   outputs:
  #     image_tag: ${{ steps.tag_name.outputs.image_tag }})
  #   steps:
  #     - name: Get current date
  #       id: date
  #       run: echo "::set-output name=date::$(date +'%Y%m%d')"
  #     - name: Extract branch name
  #       id: extract_branch
  #       shell: bash
  #       run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"
  #     - name: Create docker image tag
  #       id: image_tag
  #       run: echo "::set-output name=image_tag::$(echo ${{ github.run_number }}_${{ steps.extract_branch.outputs.branch }}_${{ steps.date.outputs.date }})"
  #     - name: Get Storybook build from cache
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           ./*
  #           ~/.pnpm-store
  #         key: ${{ github.sha }}-build-storybook
  #     - name: Login via Azure CLI
  #       uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}
  #     - name: Login to registry
  #       uses: azure/docker-login@v1
  #       with:
  #         login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
  #         username: ${{ secrets.REGISTRY_USERNAME }}
  #         password: ${{ secrets.REGISTRY_PASSWORD }}
  #     - name: Build and push image
  #       run: |
  #         docker build -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/eds-storybook:${{ steps.image_tag.outputs.image_tag }} -f ./packages/eds-core-react/Dockerfile.storybook .
  #         docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/eds-storybook:${{ steps.image_tag.outputs.image_tag }}
  #     - name: Deploy to Web app
  #       uses: azure/webapps-deploy@v2
  #       with:
  #         app-name: 'eds-storybook-react'
  #         slot-name: '${{ github.event.inputs.storybook-slot }}'
  #         images: '${{ secrets.REGISTRY_LOGIN_SERVER }}/eds-storybook:${{ steps.image_tag.outputs.image_tag }}'
  # build_push_docker_lab:
  #   name: Build & Deploy Docker lab
  #   runs-on: ubuntu-latest
  #   needs: [build-storybook-lab]
  #   outputs:
  #     image_tag: ${{ steps.tag_name.outputs.image_tag }})
  #   steps:
  #     - name: Get current date
  #       id: date
  #       run: echo "::set-output name=date::$(date +'%Y%m%d')"
  #     - name: Extract branch name
  #       id: extract_branch
  #       shell: bash
  #       run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"
  #     - name: Create docker image tag
  #       id: image_tag
  #       run: echo "::set-output name=image_tag::$(echo ${{ github.run_number }}_${{ steps.extract_branch.outputs.branch }}_${{ steps.date.outputs.date }})"
  #     - name: Get Storybook build from cache
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           ./*
  #           ~/.pnpm-store
  #         key: ${{ github.sha }}-build-storybook
  #     - name: Login via Azure CLI
  #       uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}
  #     - name: Login to registry
  #       uses: azure/docker-login@v1
  #       with:
  #         login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
  #         username: ${{ secrets.REGISTRY_USERNAME }}
  #         password: ${{ secrets.REGISTRY_PASSWORD }}
  #     - name: Build and push image
  #       run: |
  #         docker build -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/eds-storybook:${{ steps.image_tag.outputs.image_tag }} -f ./packages/eds-lab-react/Dockerfile.storybook .
  #         docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/eds-storybook:${{ steps.image_tag.outputs.image_tag }}
  #     - name: Deploy to Web app
  #       uses: azure/webapps-deploy@v2
  #       with:
  #         app-name: 'eds-storybook-react'
  #         slot-name: '${{ github.event.inputs.storybook-slot }}'
  #         images: '${{ secrets.REGISTRY_LOGIN_SERVER }}/eds-storybook:${{ steps.image_tag.outputs.image_tag }}'
