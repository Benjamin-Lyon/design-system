name: Push storybook
on: workflow_dispatch
jobs:
  setup:
    name: Setup base files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout, install pnpm & cache üõéÔ∏è
        run: |
          REPO="https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git"
          git clone --filter=blob:none --no-checkout --depth 1 --sparse $REPO .
          git sparse-checkout init --cone
          git sparse-checkout set libraries/core-react libraries/tokens libraries/icons
          git checkout
      - name: Install pnpm & dependencies üì¶
        uses: pnpm/action-setup@v1.2.1
        with:
          version: latest
          bin_dest: ./pnpm/bin
          run_install: |
            - recursive: true
      - name: Cache base files
        uses: actions/cache@v2
        with:
          path: |
            ./*
            ~/.pnpm-store
            ~/setup-pnpm
          key: ${{ github.sha }}
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Get base files
        uses: actions/cache@v2
        with:
          path: |
            ./*
            ~/.pnpm-store
            ~/setup-pnpm
          key: ${{ github.sha }}
      - name: Test eds-core-react
        run: ./pnpm/bin/pnpm --filter @equinor/eds-core-react run test
  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Get base files
        uses: actions/cache@v2
        with:
          path: |
            ./*
            ~/.pnpm-store
            ~/setup-pnpm
          key: ${{ github.sha }}
      - name: Lint all libraries
        run: ./pnpm/bin/pnpm run lint ./libraries
  build-storybook:
    name: Build Storybook
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - name: Get base files
        uses: actions/cache@v2
        with:
          path: |
            ./*
            ~/.pnpm-store
            ~/setup-pnpm
          key: ${{ github.sha }}
      - name: Build storybook
        run: ./pnpm/bin/pnpm --filter @equinor/eds-core-react run build:storybook
      - uses: actions/cache@v2
        name: Save build to cache
        with:
          path: |
            ./*
            ~/.pnpm-store
            ~/setup-pnpm
          key: ${{ github.sha }}-build-storybook
  build_push_docker:
    name: Build & Deploy Docker
    runs-on: ubuntu-latest
    needs: [build-storybook]
    outputs:
      image_tag: ${{ steps.tag_name.outputs.image_tag }})
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d')"
      - name: Extract branch name
        id: extract_branch
        shell: bash
        run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"
      - name: Create docker image tag
        id: image_tag
        run: echo "::set-output name=image_tag::$(echo ${{ github.run_number }}_${{ steps.extract_branch.outputs.branch }}_${{ steps.date.outputs.date }})"
      - name: Get Storybook build from cache
        uses: actions/cache@v2
        with:
          path: |
            ./*
            ~/.pnpm-store
            ~/setup-pnpm
          key: ${{ github.sha }}-build-storybook
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: 'Login to registry'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: 'Build and push image'
        run: |
          docker build -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/eds-storybook:${{ steps.image_tag.outputs.image_tag }})-f ./libraries/core-react/Dockerfile.storybook .
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/eds-storybook:${{ steps.image_tag.outputs.image_tag }})
      - uses: azure/webapps-deploy@v2
        with:
          app-name: eds-storybook-react
          images: ${{ steps.image_tag.outputs.image_tag }}
          slot-name: development
  # deploy_docker:
  #   name: Deploy to Web app
  #   runs-on: ubuntu-latest
  #   needs: [build_push_docker]
  #   steps:
  #     - name: 'Deploy to Azure Container Instances'
  #       uses: 'azure/aci-deploy@v1'
  #       with:
  #         resource-group: ${{ secrets.RESOURCE_GROUP }}
  #         dns-name-label: ${{ secrets.RESOURCE_GROUP }}${{ github.run_number }}
  #         image: ${{ needs.build_push_docker.outputs.image_tag }}
  #         registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
  #         registry-username: ${{ secrets.REGISTRY_USERNAME }}
  #         registry-password: ${{ secrets.REGISTRY_PASSWORD }}
  #         name: eds-storybook-react
